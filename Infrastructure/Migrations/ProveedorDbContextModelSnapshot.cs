// <auto-generated />
using System;
using GrúasUCAB.Infrastructure.Persistence.Proveedores;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ProveedorDbContext))]
    partial class ProveedorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GrúasUCAB.Core.Ordenes.Entities.CostoAdicional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.ToTable("CostoAdicional");
                });

            modelBuilder.Entity("GrúasUCAB.Core.Ordenes.Entities.OrdenServicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConductorId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KilometrosRecorridos")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ProveedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("UbicacionDestino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UbicacionIncidente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("VehiculoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConductorId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("OrdenServicio");
                });

            modelBuilder.Entity("GrúasUCAB.Core.Proveedores.Entities.Conductor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Licencia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("Conductor", (string)null);
                });

            modelBuilder.Entity("GrúasUCAB.Core.Proveedores.Entities.Vehiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("GrúasUCAB.Core.Ordenes.Entities.CostoAdicional", b =>
                {
                    b.HasOne("GrúasUCAB.Core.Ordenes.Entities.OrdenServicio", "Orden")
                        .WithMany("CostosAdicionales")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("GrúasUCAB.Core.Ordenes.Entities.OrdenServicio", b =>
                {
                    b.HasOne("GrúasUCAB.Core.Proveedores.Entities.Conductor", "Conductor")
                        .WithMany("Ordenes")
                        .HasForeignKey("ConductorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");

                    b.HasOne("GrúasUCAB.Core.Proveedores.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId");

                    b.Navigation("Conductor");

                    b.Navigation("Proveedor");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("GrúasUCAB.Core.Proveedores.Entities.Vehiculo", b =>
                {
                    b.HasOne("Proveedor", null)
                        .WithMany("Vehiculos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrúasUCAB.Core.Ordenes.Entities.OrdenServicio", b =>
                {
                    b.Navigation("CostosAdicionales");
                });

            modelBuilder.Entity("GrúasUCAB.Core.Proveedores.Entities.Conductor", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Proveedor", b =>
                {
                    b.Navigation("Vehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
